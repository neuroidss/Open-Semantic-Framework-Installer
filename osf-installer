#!/usr/bin/php -q

<?php  
  
  if(PHP_SAPI != 'cli')
  {
    die('This is a shell application, so make sure to run this application in a terminal window.');
  }
  
  ini_set('memory_limit', '500M');
  
  // Set the working directory of this script to its home directory.
  // That way, if it is run from elsewhere, the relative paths will follow.
  chdir(dirname(realpath($argv[0])));  

  include_once('inc/distros/OSFInstaller_Ubuntu_14_04.php');
  include_once('inc/distros/OSFInstaller_CentOS_7.php');
  include_once('inc/distros/OSFInstaller_CentOS_6.php');
  
  $installer;
  
  // Detects the version of the current linux distribution.
  // Let's use the installer for the good distribution and the good version.
  // If the distribution/version is not supported, the generic installer
  // is used; this means that some features may be disabled.
  if(OSFInstaller_Ubuntu_14_04::isWorkingInstaller())
  {    
    $installer = new OSFInstaller_Ubuntu_14_04(getcwd().'/installer.ini');  
  }
  elseif(OSFInstaller_CentOS_7::isWorkingInstaller())
  {
    $installer = new OSFInstaller_CentOS_7(getcwd().'/installer.ini');
  }
  elseif(OSFInstaller_CentOS_6::isWorkingInstaller())
  {
    $installer = new OSFInstaller_CentOS_6(getcwd().'/installer.ini');
  }
  else
  {
    include_once('inc/OSFInstallerGeneric.php');
    
    $installer = new OSFInstallerGeneric(getcwd().'/installer.ini');
  }    

  // Get commandline options
  $arguments = getopt('h::v::c::d::', array(
    'help::',
    'verbose::',
    'configure-osf-installer::',
    'configure-osf-drupal-installer::',
    'list-configurations::',
    'install-osf::',
    'install-osf-drupal::',
    'install-apache::',
    'install-sql::',
    'install-phpmyadmin::',
    'install-php::',
    'install-virtuoso::',
    'install-solr::',
    // OSF Web Services
    'install-osf-web-services::',
    'upgrade-osf-web-services::',
    'uninstall-osf-web-services::',
    'configure-osf-web-services::',
    // OSF WS-PHP-API
    'install-osf-ws-php-api::',
    'upgrade-osf-ws-php-api::',
    'uninstall-osf-ws-php-api::',
    // OSF Tests Suites
    'install-osf-tests-suites::',
    'upgrade-osf-tests-suites::',
    'uninstall-osf-tests-suites::',
    'configure-osf-tests-suites::',
    // OSF Permissions Management Tool
    'install-osf-permissions-management-tool::',
    'upgrade-osf-permissions-management-tool::',
    'uninstall-osf-permissions-management-tool::',
    'configure-osf-permissions-management-tool::',
    // OSF Datasets Management Tool
    'install-osf-datasets-management-tool::',
    'upgrade-osf-datasets-management-tool::',
    'uninstall-osf-datasets-management-tool::',
    'configure-osf-datasets-management-tool::',
    // OSF Ontologies Management Tool
    'install-osf-ontologies-management-tool::',
    'upgrade-osf-ontologies-management-tool::',
    'uninstall-osf-ontologies-management-tool::',
    'configure-osf-ontologies-management-tool::',
    'load-osf-ontologies-management-tool::',
    // OSF Data Validator Tool
    'install-osf-data-validator-tool::',
    'upgrade-osf-data-validator-tool::',
    'uninstall-osf-data-validator-tool::',
    'configure-osf-data-validator-tool::',
  ));

  // Displaying DSF's help screen if required
  if (isset($arguments['h']) || isset($arguments['help'])) {
    $installer->span("Usage: osf-install [OPTIONS]\n\n");
    $installer->span("General Options:");
    $installer->span("-h, --help                              Show this help section");
    $installer->span("-v, --verbose                           Make this insaller verbose");
    $installer->span("-c, --configure-osf-installer           Configure the options used by this installer to install OSF");
    $installer->span("-d, --configure-osf-drupal-installer    Configure the options used by this installer to install OSF for Drupal");
    $installer->span("--list-configurations                   List the current configuration used by the installer tool\n");
    $installer->span("OSF Installation Options:");
    $installer->span("Note: the [VERSION] parameter is optional.");
    $installer->span("      If no version is specified, the latest DEV version will be used");
    $installer->span("");
    $installer->span("--install-osf                           Install the Open Semantic Framework ");
    $installer->span("--install-apache                        Install Apache ");
    $installer->span("--install-sql                           Install SQL ");
    $installer->span("--install-phpmyadmin                    Install PhpMyAdmin ");
    $installer->span("--install-virtuoso                      Install Virtuoso ");
    $installer->span("--install-solr                          Install Solr ");
    $installer->span("--install-php                           Install PHP ");
    $installer->span("\nOSF Drupal Installation Options:");
    $installer->span("");
    $installer->span("--install-osf-drupal                    Install Drupal with the OSF Drupal modules ");
    $installer->span("\nUpgrade Options:");
    $installer->span("Note: the [VERSION] parameter is optional.");
    $installer->span("      If no version is specified, the latest DEV version will be used");
    $installer->span("");
    $installer->span("\nOSF Components:");
    $installer->span("Note: the [VERSION] parameter is optional.");
    $installer->span("      If no version is specified, the latest stable version will be used");
    $installer->span("");
    $installer->span("--install-osf-web-services=\"[VERSION]\"                  Install OSF Web Services");
    $installer->span("--upgrade-osf-web-services=\"[VERSION]\"                  Upgrade OSF Web Services");
    $installer->span("--uninstall-osf-web-services                            Uninstall OSF Web Services");
    $installer->span("--configure-osf-web-services                            Configure OSF Web Services");
    $installer->span("");
    $installer->span("--install-osf-ws-php-api=\"[VERSION]\"                    Install OSF WS-PHP-API");
    $installer->span("--upgrade-osf-ws-php-api=\"[VERSION]\"                    Upgrade OSF WS-PHP-API");
    $installer->span("--uninstall-osf-ws-php-api                              Uninstall OSF WS-PHP-API");
    $installer->span("");
    $installer->span("--install-osf-tests-suites=\"[VERSION]\"                  Install OSF Tests Suites");
    $installer->span("--upgrade-osf-tests-suites=\"[VERSION]\"                  Upgrade OSF Tests Suites");
    $installer->span("--uninstall-osf-tests-suites                            Uninstall OSF Tests Suites");
    $installer->span("--configure-osf-tests-suites                            Configure OSF Tests Suites");
    $installer->span("");
    $installer->span("--install-osf-data-validator-tool=\"[VERSION]\"           Install OSF Data Validator Tool");
    $installer->span("--upgrade-osf-data-validator-tool=\"[VERSION]\"           Upgrade OSF Data Validator Tool");
    $installer->span("--uninstall-osf-data-validator-tool                     Uninstall OSF Data Validator Tool");
    $installer->span("--configure-osf-data-validator-tool                     Configure OSF Data Validator Tool");
    $installer->span("");
    $installer->span("--install-osf-permissions-management-tool=\"[VERSION]\"   Install OSF Permissions Management Tool");
    $installer->span("--upgrade-osf-permissions-management-tool=\"[VERSION]\"   Upgrade OSF Permissions Management Tool");
    $installer->span("--uninstall-osf-permissions-management-tool             Uninstall OSF Permissions Management Tool");
    $installer->span("--configure-osf-permissions-management-tool             Configure OSF Permissions Management Tool");
    $installer->span("");
    $installer->span("--install-osf-datasets-management-tool=\"[VERSION]\"      Install OSF Datasets Management Tool");
    $installer->span("--upgrade-osf-datasets-management-tool=\"[VERSION]\"      Upgrade OSF Datasets Management Tool");
    $installer->span("--uninstall-osf-datasets-management-tool                Uninstall OSF Datasets Management Tool");
    $installer->span("--configure-osf-datasets-management-tool                Configure OSF Datasets Management Tool");
    $installer->span("");
    $installer->span("--install-osf-ontologies-management-tool=\"[VERSION]\"    Install OSF Ontologies Management Tool");
    $installer->span("--upgrade-osf-ontologies-management-tool=\"[VERSION]\"    Upgrade OSF Ontologies Management Tool");
    $installer->span("--uninstall-osf-ontologies-management-tool              Uninstall OSF Ontologies Management Tool");
    $installer->span("--configure-osf-ontologies-management-tool              Configure OSF Ontologies Management Tool");
    $installer->span("--load-osf-ontologies-management-tool                   Load OSF Ontologies Management Tool");
    $installer->span("\n");
    die;
  }

  // Configure installer
  
  // Run the configuration to install OSF
  if(isset($arguments['c']) || isset($arguments['configure-osf-installer']))
  {
    $installer->configureInstallerOSF();
  }  
  
  // Run the configuration to install OSF for Drupal
  if(isset($arguments['d']) || isset($arguments['configure-osf-drupal-installer']))
  {
    $installer->configureInstallerOSFDrupal();
  }  
   
  // Run the OSF Drupal configuration if the user wants to install it without having it
  // configured
  if(isset($arguments['install-osf-drupal']) && !$installer->installer_osf_drupal_configured)
  {
    $installer->configureInstallerOSFDrupal();
  }
  
  // List current configuration settings
  if(isset($arguments['list-configurations']))
  {
    $installer->listConfigurations();
  }
  
  // Make the output more verbose
  if(isset($arguments['v']) || isset($arguments['verbose']))
  {
    $installer->verbose();
  }
  
  // Install the Open Semantic Framework
  if(isset($arguments['install-osf']))
  {
    $installer->install_OSF();
  }
  
  // Install the Drupal & OSF Drupal
  if(isset($arguments['install-osf-drupal']))
  {
    $installer->install_OSF_Drupal();
  }

  // Upgrade the OSF Web Services version on the system
  if(isset($arguments['upgrade-osf-web-services']))
  {
    include_once('inc/OSFWebServicesUpgrader.php');    
    
    $upgrader = new OSFWebServicesUpgrader(getcwd().'/installer.ini');
  }

  // Upgrade the OSF Web Services to the latest development code
  if(isset($arguments['upgrade-osf-web-services-code-base']))
  {
    include_once('inc/OSFWebServicesUpgrader.php');    
    
    $upgrader = new OSFWebServicesUpgrader(getcwd().'/installer.ini', TRUE);
  }

  /**
   *  OSF Web Services
   */
  if (isset($arguments['install-osf-web-services'])) {
    $installer->switch_OSF_WebServices('install', $arguments['install-osf-web-services']);
  }
  if (isset($arguments['uninstall-osf-web-services'])) {
    $installer->switch_OSF_WebServices('uninstall');
  }
  if (isset($arguments['configure-osf-web-services'])) {
    $installer->switch_OSF_WebServices('configure');
  }

  /**
   *  OSF WS-PHP-API
   */
  if (isset($arguments['install-osf-ws-php-api'])) {
    $installer->switch_OSF_WSPHPAPI('install', $arguments['install-osf-ws-php-api']);
  }
  if (isset($arguments['upgrade-osf-ws-php-api'])) {
    $installer->switch_OSF_WSPHPAPI('upgrade', $arguments['upgrade-osf-ws-php-api']);
  }
  if (isset($arguments['uninstall-osf-ws-php-api'])) {
    $installer->switch_OSF_WSPHPAPI('uninstall');
  }

  /**
   *  OSF Tests Suites
   */
  if (isset($arguments['install-osf-tests-suites'])) {
    $installer->switch_OSF_TestsSuites('install', $arguments['install-osf-tests-suites']);
  }
  if (isset($arguments['upgrade-osf-tests-suites'])) {
    $installer->switch_OSF_TestsSuites('upgrade', $arguments['upgrade-osf-tests-suites']);
  }
  if (isset($arguments['uninstall-osf-tests-suites'])) {
    $installer->switch_OSF_TestsSuites('uninstall');
  }
  if (isset($arguments['configure-osf-tests-suites'])) {
    $installer->switch_OSF_TestsSuites('configure');
  }

  /**
   *  OSF Data Validator Tool
   */
  if (isset($arguments['install-osf-data-validator-tool'])) {
    $installer->switch_OSF_DataValidatorTool('install', $arguments['install-osf-data-validator-tool']);
  }
  if (isset($arguments['upgrade-osf-data-validator-tool'])) {
    $installer->switch_OSF_DataValidatorTool('upgrade', $arguments['upgrade-osf-data-validator-tool']);
  }
  if (isset($arguments['uninstall-osf-data-validator-tool'])) {
    $installer->switch_OSF_DataValidatorTool('uninstall');
  }
  if (isset($arguments['configure-osf-data-validator-tool'])) {
    $installer->switch_OSF_DataValidatorTool('configure');
  }

  /**
   *  OSF Permissions Management Tool
   */
  if (isset($arguments['install-osf-permissions-management-tool'])) {
    $installer->switch_OSF_PermissionsManagementTool('install', $arguments['install-osf-permissions-management-tool']);
  }
  if (isset($arguments['upgrade-osf-permissions-management-tool'])) {
    $installer->switch_OSF_PermissionsManagementTool('upgrade', $arguments['upgrade-osf-permissions-management-tool']);
  }
  if (isset($arguments['uninstall-osf-permissions-management-tool'])) {
    $installer->switch_OSF_PermissionsManagementTool('uninstall');
  }
  if (isset($arguments['configure-osf-permissions-management-tool'])) {
    $installer->switch_OSF_PermissionsManagementTool('configure');
  }

  /**
   *  OSF Datasets Management Tool
   */
  if (isset($arguments['install-osf-datasets-management-tool'])) {
    $installer->switch_OSF_DatasetsManagementTool('install', $arguments['install-osf-datasets-management-tool']);
  }
  if (isset($arguments['upgrade-osf-datasets-management-tool'])) {
    $installer->switch_OSF_DatasetsManagementTool('upgrade', $arguments['upgrade-osf-datasets-management-tool']);
  }
  if (isset($arguments['uninstall-osf-datasets-management-tool'])) {
    $installer->switch_OSF_DatasetsManagementTool('uninstall');
  }
  if (isset($arguments['configure-osf-datasets-management-tool'])) {
    $installer->switch_OSF_DatasetsManagementTool('configure');
  }

  /**
   *  OSF Ontologies Management Tool
   */
  if (isset($arguments['install-osf-ontologies-management-tool'])) {
    $installer->switch_OSF_OntologiesManagementTool('install', $arguments['install-osf-ontologies-management-tool']);
  }
  if (isset($arguments['upgrade-osf-ontologies-management-tool'])) {
    $installer->switch_OSF_OntologiesManagementTool('upgrade', $arguments['upgrade-osf-ontologies-management-tool']);
  }
  if (isset($arguments['uninstall-osf-ontologies-management-tool'])) {
    $installer->switch_OSF_OntologiesManagementTool('uninstall');
  }
  if (isset($arguments['configure-osf-ontologies-management-tool'])) {
    $installer->switch_OSF_OntologiesManagementTool('configure');
  }
  if (isset($arguments['load-osf-ontologies-management-tool'])) {
    $installer->switch_OSF_OntologiesManagementTool('load');
  }

  // Install Apache2 on the system
  if(isset($arguments['install-apache']))
  {
    $installer->installApache();
  }
  
  // Install PHP5 on the system
  if(isset($arguments['install-php']))
  {
    $installer->installPhp();
  }
  
  // Install SQL on the system
  if(isset($arguments['install-sql']))
  {
    $installer->installSQL('server');
    $installer->installSQL('client');
  }
  
  // Install PhpMyAdmin on the system
  if(isset($arguments['install-phpmyadmin']))
  {
    $installer->installPhpMyAdmin();
  }
  
  // Install Virtuoso on the system
  if(isset($arguments['install-virtuoso']))
  {
    $installer->installVirtuoso();
  }
  
  // Install Solr on the system
  if(isset($arguments['install-solr']))
  {
    $installer->installSolr();
  }
  
?>
